[includeIf "gitdir:~/code/work/"]
    path = ~/.config/git/config_work

[includeIf "gitdir:~/.local/share/chezmoi/"]
    path = ~/.config/git/config_personal

[includeIf "gitdir:~/code/nexeck/"]
    path = ~/.config/git/config_personal

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[column]
	ui = auto

[core]
	# Use custom `.gitignore` and `.gitattributes`
	excludesfile = ~/.config/git/ignore
	attributesfile = ~/.config/git/attributes

	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

	# Make `git rebase` safer on macOS
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false

	# Prevent showing files whose names contain non-ASCII symbols as unversioned.
	# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
	precomposeunicode = false

	# Speed up commands involving untracked files such as `git status`.
	# https://git-scm.com/docs/git-update-index#_untracked_cache
	untrackedCache = true

	editor = micro
	ignorecase = false
	pager = delta

[commit]
	template = ~/.config/git/template-commit

[diff]
	# Detect copies as well as renames
	renames = copies

[fetch]
	all = true
	fsckobjects = false
	prune = true

[help]
	# Automatically correct and execute mistyped commands
	autocorrect = 1

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
	ff = only

[push]
	# Use the Git 1.x.x default to avoid errors on machines with old Git
	# installations. To use `simple` instead, add this to your `~/.extra` file:
	# `git config --global push.default simple`. See http://git.io/mMah-w.
	default = simple
	# Make `git push` push relevant annotated tags when pushing branches out.
	followTags = true
	autoSetupRemote = true
	useForceIfIncludes = true

[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process

[pull]
	rebase = true

[rebase]
	autoSquash = true
	autoStash = true
	updateRefs = true

[receive]
	fsckobjects = true

[transfer]
	fsckobjects = true

[init]
	defaultBranch = main

[interactive]
    diffFilter = delta --color-only --features=interactive

[delta]
    features = decorations

[delta "interactive"]
    keep-plus-minus-markers = false

[delta "decorations"]
    commit-decoration-style = blue ol
    commit-style = raw
    file-style = omit
    hunk-header-decoration-style = blue box
    hunk-header-file-style = red
    hunk-header-line-number-style = "#067a00"
    hunk-header-style = file line-number syntax

[diff "jupyternotebook"]
	command = git-nbdiffdriver diff

[merge "jupyternotebook"]
	driver = git-nbmergedriver merge %O %A %B %L %P
	name = jupyter notebook merge driver

[difftool "nbdime"]
	cmd = git-nbdifftool diff \"$LOCAL\" \"$REMOTE\" \"$BASE\"

[difftool]
	prompt = false

[mergetool "nbdime"]
	cmd = git-nbmergetool merge \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\"

[mergetool]
	prompt = false
